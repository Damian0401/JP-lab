package com.controlcenter;

import com.controlcenter.interfaces.IControlCenterListener;
import com.controlcenter.interfaces.IControlCenterService;
import com.controlcenter.models.NameTableModel;
import com.controlcenter.models.UpdateInfoTableModel;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import shoppingCarts.data.UpdateInfo;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class ControlCenterGUI extends JFrame implements IControlCenterListener {
    private JPanel mainPanel;
    private JTable cartStationsTable;
    private JTable workersTable;
    private JTextField portTextField;
    private JButton connectButton;
    private JButton exitButton;
    private JLabel statusLabel;
    private NameTableModel nameTableModel;
    private UpdateInfoTableModel updateInfoTableModel;
    private final IControlCenterService controlCenterService;

    public ControlCenterGUI(String title, IControlCenterService controlCenterService) {
        super(title);
        this.controlCenterService = controlCenterService;
        initializeComponents();
        initializeFrame();
    }

    private void initializeComponents() {
        exitButton.addActionListener(e -> System.exit(0));
        connectButton.addActionListener(e -> handleConnection());
        initializeTables();
    }

    private void initializeFrame() {
        setContentPane(mainPanel);
        setSize(new Dimension(500, 350));
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    private void initializeTables() {
        nameTableModel = new NameTableModel("Workers");
        workersTable.setModel(nameTableModel);
        updateInfoTableModel = new UpdateInfoTableModel();
        cartStationsTable.setModel(updateInfoTableModel);
    }

    private void handleConnection() {
        controlCenterService.handleConnection(portTextField.getText());
        portTextField.setText("");
        connectButton.setEnabled(false);
    }

    @Override
    public void displayMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    @Override
    public void changeStatus(String status) {
        statusLabel.setText(status);
    }

    @Override
    public void displayWorker(String name) {
        nameTableModel.addName(name);
    }

    @Override
    public void removeWorker(String name) {
        nameTableModel.deleteName(name);
    }

    @Override
    public void displayCartStation(UpdateInfo updateInfo) {
        updateInfoTableModel.addUpdateInfo(updateInfo);
    }

    @Override
    public void removeCartStation(String stationName) {
        updateInfoTableModel.deleteUpdateInfo(stationName);
    }

    @Override
    public void updateCartStation(UpdateInfo updateInfo) {
        updateInfoTableModel.updateUpdateInfo(updateInfo);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        cartStationsTable = new JTable();
        scrollPane1.setViewportView(cartStationsTable);
        final JScrollPane scrollPane2 = new JScrollPane();
        mainPanel.add(scrollPane2, new GridConstraints(0, 2, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        workersTable = new JTable();
        scrollPane2.setViewportView(workersTable);
        portTextField = new JTextField();
        mainPanel.add(portTextField, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        exitButton = new JButton();
        exitButton.setText("EXIT");
        mainPanel.add(exitButton, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        connectButton = new JButton();
        connectButton.setText("Connect");
        mainPanel.add(connectButton, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Enter port:");
        mainPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("status:");
        mainPanel.add(label2, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        statusLabel = new JLabel();
        statusLabel.setText("offline");
        mainPanel.add(statusLabel, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
